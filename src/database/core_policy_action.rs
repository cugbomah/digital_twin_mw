//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "core_policy_action")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    #[sea_orm(column_name = "policyId")]
    pub policy_id: Uuid,
    #[sea_orm(column_name = "endPoint")]
    pub end_point: String,
    pub description: String,
    #[sea_orm(column_name = "endPointVerb")]
    pub end_point_verb: String,
    #[sea_orm(column_name = "actionCount")]
    pub action_count: i32,
    #[sea_orm(column_name = "resetFrequencyId")]
    pub reset_frequency_id: i32,
    #[sea_orm(column_name = "createdAt")]
    pub created_at: DateTimeWithTimeZone,
    #[sea_orm(column_name = "createdBy")]
    pub created_by: Uuid,
    #[sea_orm(column_name = "updatedAt")]
    pub updated_at: DateTimeWithTimeZone,
    #[sea_orm(column_name = "updatedBy")]
    pub updated_by: Option<Uuid>,
    #[sea_orm(column_name = "deletedAt")]
    pub deleted_at: Option<DateTimeWithTimeZone>,
    #[sea_orm(column_name = "deletedBy")]
    pub deleted_by: Option<Uuid>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::core_action_reset_frequency::Entity",
        from = "Column::ResetFrequencyId",
        to = "super::core_action_reset_frequency::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    CoreActionResetFrequency,
    #[sea_orm(
        belongs_to = "super::core_policy::Entity",
        from = "Column::PolicyId",
        to = "super::core_policy::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    CorePolicy,
    #[sea_orm(has_many = "super::core_policy_violation::Entity")]
    CorePolicyViolation,
    #[sea_orm(
        belongs_to = "super::core_user::Entity",
        from = "Column::CreatedBy",
        to = "super::core_user::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    CoreUser,
    #[sea_orm(has_many = "super::core_user_model_policy::Entity")]
    CoreUserModelPolicy,
}

impl Related<super::core_action_reset_frequency::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CoreActionResetFrequency.def()
    }
}

impl Related<super::core_policy::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CorePolicy.def()
    }
}

impl Related<super::core_policy_violation::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CorePolicyViolation.def()
    }
}

impl Related<super::core_user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CoreUser.def()
    }
}

impl Related<super::core_user_model_policy::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CoreUserModelPolicy.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
